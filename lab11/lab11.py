# №11 Быстрая ("Разделяй и властвуй", сортировка Хоара)
# Выбирается опорный элемент p (середина массива), индексы i и j,
# которые соответствуют началу и концу массива
# Если в левой или правой частях больше 1 элемента,
# то quickSort для этих подмассивов
# Сложность O(nlogn)

def quickSort(x):
    # Возвращаем, если один элемент
    if len(x) <= 1:
        return x
    
    #Выбираем в качестве опорного элемента середину массива
    mid = x[len(x)//2]
    # Делим массив на три списка, чтобы при равных элементах алгоритм не зацикливался
    lessMid = [] # < mid
    moreMid = [] # > mid
    equalMid = [] # = mid
    for i in x: # Проходим элементы массива и сортируем относительно опорного
        if i < mid:
            lessMid.append(i)
        elif i > mid:
            moreMid.append(i)
        else:
            equalMid.append(i)
    return quickSort(lessMid) + equalMid + quickSort(moreMid) # Сортируем подмассивы и возвращаем


x = [9, 15, 1, 24, 3212, 6]
print(quickSort(x))
